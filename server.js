// Generated by CoffeeScript 1.6.2
(function() {
  var fs, http, server, url, utils, _;

  http = require('http');

  url = require('url');

  fs = require('fs');

  _ = require('underscore');

  utils = require('./utils.js');

  server = http.createServer(function(req, res) {
    var file_id, headers, uuid;

    console.log(req.headers);
    switch (req.method.toUpperCase()) {
      case 'POST':
        if (url.parse(req.url).pathname === '/files') {
          uuid = utils.uuid();
          headers = {
            'Location': 'http://localhost:3001/files/' + uuid,
            'Content-Length': '0'
          };
          res.writeHead(201, headers);
          res.write('\n');
          res.end;
          return utils.mongo(function(files) {
            return files.insert(_.extend({
              'uuid': uuid
            }, req.headers));
          });
        }
        break;
      case 'PUT':
        file_id = req.url.slice(7);
        return utils.mongo(function(files) {
          var q;

          q = files.find({
            uuid: file_id
          }).toArray();
          q.done(function(docs) {
            var file_meta;

            file_meta = docs[0];
            req.on('data', function(chunk) {
              console.log('Receive Data!');
              console.log(chunk.length);
              return fs.writeFile('./files/' + file_meta['uuid'], chunk, {
                flag: 'a+'
              }, function(err) {
                if (err) {
                  throw err;
                }
              });
            });
            return req.on('end', function() {
              console.log('Receive End!');
              headers = {
                'Range': 'bytes=0-' + (parseInt(file_meta['content-range'].split('/')[1]) - 1),
                'Content-Length': 0,
                'Connection': 'close'
              };
              console.log(headers);
              res.writeHead(200, headers);
              res.write('\n');
              return res.end;
            });
          });
          return q.fail(function(error) {
            console.log("mongo failed");
            console.log(error);
            throw error;
          });
        });
      case 'HEAD':
        res.writeHead(200, {
          'Content-Type': 'text/plain'
        });
        return res.write('head');
      default:
        res.writeHead(403);
        return res.end;
    }
  });

  server.listen(3001, 'localhost');

}).call(this);
