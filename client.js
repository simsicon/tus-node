// Generated by CoffeeScript 1.6.2
(function() {
  var build_content_range, fs, http, post_file, put_file, send_file, send_request, shared_opts, url, _;

  http = require('http');

  fs = require('fs');

  _ = require('underscore');

  url = require('url');

  send_request = function(data, options, cb) {
    var req;

    req = http.request(options);
    req.on('error', function(e) {
      return console.log('Problem with request:' + e.message);
    });
    req.on('response', function(res) {
      console.log('STATUS:' + res.statusCode);
      console.log('HEADERS:' + JSON.stringify(res.headers));
      res.setEncoding('utf-8');
      return cb(res);
    });
    if (_.isString(data) || Buffer.isBuffer(data)) {
      req.write(data);
      req.write('0\r\n\r\n');
    } else {
      req.write('0\r\n\r\n');
    }
    return req.end;
  };

  build_content_range = function(begin, end, length) {
    var head_str;

    if (begin === null) {
      head_str = '*';
    } else {
      head_str = begin + '-' + end;
    }
    return 'bytes ' + head_str + '/' + length;
  };

  shared_opts = function() {
    return {
      hostname: 'localhost',
      port: 3001
    };
  };

  post_file = function(data, callback) {
    var opts;

    opts = {
      headers: {
        'Content-Length': '0',
        'Content-Range': build_content_range(null, null, data.length),
        'Content-Type': 'text/plain',
        'Content-Disposition': 'attachment; filename="file"'
      },
      method: 'POST',
      path: '/files'
    };
    return send_request(null, _.extend(shared_opts(), opts), function(res) {
      return callback(res);
    });
  };

  put_file = function(data, res) {
    var location, opts;

    location = url.parse(res.headers['location']);
    opts = {
      headers: {
        'Content-Length': data.length,
        'Content-Range': build_content_range(0, data.length - 1, data.length)
      },
      method: 'PUT',
      path: location.path
    };
    return send_request(data, _.extend(shared_opts(), opts), function(res) {});
  };

  send_file = function() {
    return fs.readFile('./file', function(err, data) {
      if (err) {
        throw err;
      }
      return post_file(data, function(res) {
        return put_file(data, res, function() {});
      });
    });
  };

  send_file();

}).call(this);
